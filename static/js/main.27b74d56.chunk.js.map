{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","props","className","src","logo","alt","api","baseUrl","headers","this","res","ok","json","Promise","reject","status","fetch","then","_checkPromise","item","method","body","JSON","stringify","name","Place","link","Url","profileNewInfo","popup__text_type_author","about","popup__text_type_profession","cardId","avatar","authorization","Card","card","onCardClick","type","onClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","user","userInfo","getInitialCards","typt","onEditAvatar","aria-label","onEditProfile","onAddPlace","map","key","_id","clickImages","Footer","PopupWithForm","isOpen","onClose","title","children","ImagePopup","image","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","required","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.27b74d56.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Места России\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","class Api {\r\n    constructor({ baseUrl, headers = {} }) {\r\n            this.baseUrl = baseUrl;\r\n            this.headers = headers;\r\n        }\r\n        // Метод проверки промиса\r\n    _checkPromise(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n                headers: this.headers\r\n            })\r\n            .then(res => this._checkPromise(res))\r\n    }\r\n    newCardAdd(item) {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n                method: 'POST',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    name: item.Place,\r\n                    link: item.Url\r\n                })\r\n            })\r\n            .then(res => this._checkPromise(res));\r\n    }\r\n\r\n\r\n    // Загрузка профиля с сервера\r\n    getUserInfo() {\r\n            return fetch(`${this.baseUrl}/users/me`, {\r\n                    headers: this.headers\r\n                })\r\n                .then((res) => this._checkPromise(res))\r\n        }\r\n        // Редактирование профиля\r\n    patchProfileInfo(profileNewInfo) {\r\n            return fetch(`${this.baseUrl}/users/me`, {\r\n                    method: 'PATCH',\r\n                    headers: this.headers,\r\n                    body: JSON.stringify({\r\n                        name: profileNewInfo.popup__text_type_author,\r\n                        about: profileNewInfo.popup__text_type_profession\r\n                    })\r\n                })\r\n                .then(res => this._checkPromise(res));\r\n        }\r\n        // Удаление карты\r\n    removeCard(cardId) {\r\n            return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n                    method: 'DELETE',\r\n                    headers: this.headers\r\n                })\r\n                .then(res => this._checkPromise(res));\r\n        }\r\n        // Добаление лайка\r\n    addLike(cardId) {\r\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n                    method: 'PUT',\r\n                    headers: this.headers\r\n                })\r\n                .then(res => this._checkPromise(res));\r\n        }\r\n        // Удаление лайка\r\n    removeLike(cardId) {\r\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n                    method: 'DELETE',\r\n                    headers: this.headers\r\n                })\r\n                .then(res => this._checkPromise(res));\r\n        }\r\n        // Запрос на обновление аватарки\r\n    addAvatar(avatar) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n                method: 'PATCH',\r\n                headers: this.headers,\r\n                body: JSON.stringify(avatar)\r\n            })\r\n            .then(res => this._checkPromise(res));\r\n    }\r\n}\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\r\n    headers: {\r\n        authorization: 'bfafbae2-07a3-48fe-808e-9f17604e2a09',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\nexport default api","import React from 'react';\r\nfunction Card(props){\r\n    const {card, onCardClick} = props;\r\n    function handleClick() {\r\n        onCardClick(card);\r\n      }\r\n    return (\r\n        <div className=\"element\">\r\n            <button className=\"element__delete\" type=\"button\"></button>\r\n            <img onClick={handleClick} className=\"element__img\" alt={card.name} src={card.link}/>\r\n            <div className=\"element__cell\">\r\n                <p className=\"element__title\">{card.name}</p>\r\n                <div className=\"element__likes\">\r\n                    <button className=\"element__like\" type=\"submit\"></button>\r\n                    <p className=\"element__like_length\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card","import React from 'react';\r\nimport api from '../utils/Api';\r\nimport Card from './Card';\r\n\r\nconst Main = (props) => {\r\n\r\n    const [userName, setUserName] = React.useState();\r\n    const [userDescription, setUserDescription] = React.useState();\r\n    const [userAvatar, setUserAvatar] = React.useState();\r\n    const [cards, setCards] = React.useState([]);\r\n    React.useEffect(() => {\r\n        function userInfo(user) {\r\n            setUserName(user.name);\r\n            setUserDescription(user.about);\r\n            setUserAvatar(user.avatar);\r\n        }\r\n        api.getUserInfo()\r\n            .then((user) => {\r\n                userInfo(user)\r\n            })\r\n        api.getInitialCards()\r\n            .then((cards) => {\r\n                setCards(cards)\r\n            })\r\n    }, [])\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n\r\n                <button className=\"profile__avatar_button\" typt='button' onClick={props.onEditAvatar} aria-label=\"Редактировать аватар\">\r\n                    <img src={userAvatar} className=\"profile__avatar\" alt=\"Аватар\" />\r\n                </button>\r\n\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__info-name\">\r\n                        <h1 className=\"profile__info-author\">{userName}</h1>\r\n                        <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__info-profession\">{userDescription}</p>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n            <section className=\"elements\">\r\n            {cards && cards.map((card) => (\r\n              <Card key={card._id} card={card} onCardClick={props.clickImages} />\r\n            ))}\r\n\r\n            </section>\r\n            <section className=\"popups\">\r\n  \r\n            </section>\r\n\r\n        </main>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__copyright\">&copy; 2020 Mesto Russia</div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react';\r\nfunction PopupWithForm(props){\r\n    return (\r\n        <section className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`} >\r\n        <form name={`popup__container_type_${props.name}`} className={`popup__container popup__container_type_${props.name}`}>\r\n            <button onClick={props.onClose} type=\"button\" className=\"popup__close popup__close_type_edit\"></button>\r\n            <h3 className=\"popup__title\">{props.title}</h3>\r\n            {props.children}\r\n        </form>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react'\r\nfunction ImagePopup(props) {\r\n    \r\n    return (\r\n        <section className={`popup popup__type_img ${props.isOpen ? 'popup_opened' : ''}`} >\r\n        <div className=\"popup__container_img\">\r\n            <button onClick={props.onClose} className=\"popup__close popup__close_img\" type=\"button\"></button>\r\n            <img className=\"popup__photo\" src={props.image.link} alt={props.image.name} />\r\n            <p className=\"popup__caption\">{props.image.name}</p>\r\n        </div>\r\n    </section>\r\n    )\r\n}\r\nexport default ImagePopup;\r\n\r\n","import React from 'react';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [cards, setCards] = React.useState({});\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick() {\n    setSelectedCard(true);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n    setCards({})\n    \n  }\n  const setImage = (card) => {\n    setCards(card);\n    handleCardClick();\n  }\n\n\n  return (\n    <div className=\"root\">\n      <Header />\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}  clickImages={setImage}/>\n      <Footer />\n      <PopupWithForm name='edit' title=\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} >\n        <input type=\"text\" placeholder=\"Имя\" name=\"popup__text_type_author\" className=\"popup__text popup__text_type_author\" minLength=\"2\" maxLength=\"40\" required id=\"author-card\" />\n        <span id=\"author-card-error\" className=\"error\"></span>\n        <input type=\"text\" placeholder=\"Профессия\" name=\"popup__text_type_profession\" className=\"popup__text popup__text_type_profession\" minLength=\"2\" maxLength=\"200\" required id=\"profession-card\" />\n        <span id=\"profession-card-error\" className=\"error\"></span>\n        <button className=\"popup__button popup__button_type_edit\" type=\"submit\">Сохранить</button>\n      </PopupWithForm>\n      <PopupWithForm name='add' title=\"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <input type=\"text\" placeholder=\"Название\" name=\"Place\" minLength=\"2\" required className=\"popup__text popup__text_type_place\" id=\"place-card\" />\n        <span id=\"place-card-error\" className=\"error\"></span>\n        <input type=\"url\" placeholder=\"Ссылка на картинку\" name=\"Url\" required className=\"popup__text popup__text_type_url\" id=\"url-card\" />\n        <span id=\"url-card-error\" className=\"error\"></span>\n        <button className=\"popup__button popup__button_disabled popup__button_type_add\" type=\"submit\">Сохранить</button>\n      </PopupWithForm>\n      <PopupWithForm name='avatar' title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <input type=\"url\" placeholder=\"Ссылка на картинку\" name=\"avatar\" required className=\"popup__text popup__text_type_avatar\" id=\"url-avatar\" />\n        <span id=\"url-avatar-error\" className=\"error\"></span>\n        <button className=\"popup__button popup__button_disabled popup__button_type_avatar\" type=\"submit\">Сохранить</button>\n      </PopupWithForm>\n      {/* <PopupWithForm name='delete' title=\"Вы уверенны?\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <button className=\"popup__button popup__button_type_delete\" type=\"submit\">Да</button>\n      </PopupWithForm> */}\n      \n      <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} image={cards} />\n      \n\n\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}